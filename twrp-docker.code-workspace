{
	"folders": [
		{
			"path": "."
		},
		{
			"name": "Server",
			"path": "../../.."
		}
	],
	"extensions": {
		"recommendations": [
			// PHP Intelephense
			"bmewburn.vscode-intelephense-client",

			// PHP Debug
			"felixfbecker.php-debug",

			// PHP Sniffer - Linter and Formatter, we use the WordPress standard.
			"wongjn.php-sniffer",

			// PHP Phan - Static analyzer to detect bugs in
			"tysonandre.php-phan",

			// Psalm - Static analyzer
			"getpsalm.psalm-vscode-plugin",

			// Stylelint - Modern CSS/SCSS/Less linter.
			"stylelint.vscode-stylelint",

			// ESLint - To lint JS files.
			"dbaeumer.vscode-eslint",

			// CSpell, verify language.
			"streetsidesoftware.code-spell-checker"
		]
	},
	"settings": {
		// Disable all formatters. They will be activated per language later in this file.
		"editor.formatOnType": false,
		"editor.formatOnPaste": false,
		"editor.formatOnSave": false,
		"editor.formatOnSaveTimeout": 6000,

		// We will use tabs, WP standards.
		"editor.detectIndentation": true,
		"editor.insertSpaces": false,
		"editor.tabSize": 4,
		"files.eol": "\n",

		// Exclude the development files. There is an extension that can toggle these.
		"files.exclude": {
			".phan": true,
			".svg-icons-src": true,
			".vscode": true,
			"node_modules": true,
			"**/vendor/**": true,
			".gitignore": true,
			".eslintrc.json": true,
			".phpcs.xml": true,
			"cov.xml": true,
			"cspell.json": true,
			".phpunit.result.cache": true,
			"phpunit.xml": true,
			"phpstan.neon": true,
			"twrp-docker.code-workspace": true,
			"gulpfile.js": true,
			"psalm.xml": true,
			".stylelintrc.json": true,
			"composer.json": true,
			"composer.lock": true,
			"package.json": true,
			"package-lock.json": true,
			"index.php": true,
			"**/.git": true,
			"**/.svn": true,
			"**/.hg": true,
			"**/CVS": true,
			"**/.DS_Store": true
		},

		"npm.exclude": [
			"**/wp-content/plugins/!(tabs-with-recommended-posts)/**",
			"**/wp-content/themes/**",
		],

		// =====================================================================
		// PHP Intelephense Settings:
		// disable builtin extension to not interfere.
		"php.suggest.basic": false,
		"php.validate.enable": false,
		"php.validate.run": "onSave",

		"intelephense.environment.phpVersion": "5.6",
		"intelephense.format.enable": false,
		"intelephense.diagnostics.run": "onType",
		"intelephense.completion.maxItems": 100,
		// =====================================================================


		// =====================================================================
		// PHP Debug Settings:
		// no settings.
		// =====================================================================


		// =====================================================================
		// PHP Sniffer & Beautifier - Linter and Formatter:
		"phpSniffer.autoDetect": true,

		"phpsab.snifferMode": "onType",
		"phpsab.snifferTypeDelay": 500,

		"[php]": {
			"editor.defaultFormatter": "wongjn.php-sniffer",
			"editor.formatOnSave": true,
			"editor.formatOnPaste": false,
		},
		// =====================================================================

		// =====================================================================
		// PHP Phan - Static analyzer:

		// Important! Change this when the project is moved around.
		"phan.analyzedProjectDirectory": "/wordpress/wp-content/plugins/tabs-with-recommended-posts/",

		// "phan.connectToServerWithStdio": true,
		"phan.enableGoToDefinition": false,
		"phan.enableHover": false,
		"phan.analyzeOnlyOnSave": true,
		// "phan.enableDebugLog": true,
		// =====================================================================

		// =====================================================================
		// Psalm - Static analyzer:
		"psalm.enableDebugLog": true,
		// "psalm.connectToServerWithTcp":true,
		// =====================================================================


		// =====================================================================
		// Stylelint-plus - CSS and Sass Linter and formatter.
		// The rules are in ".stylelintrc.json" file.
		"css.validate": false,
		"less.validate": false,
		"scss.validate": false,

		"stylelint.validate": [ "html", "sass", "scss" ],

		// Apply formatter.
		"[scss]": {
			"editor.codeActionsOnSave": {
				"source.fixAll.stylelint": true,
			},
			"editor.defaultFormatter": "stylelint.vscode-stylelint",
			"editor.formatOnSave": false,
			"editor.formatOnPaste": false,
		},
		// =====================================================================


		// =====================================================================
		// ESLint - JS Linter and formatter.
		// The rules are in ".eslintrc.json" file.
		"eslint.codeAction.disableRuleComment": { "enable": true, "location": "separateLine" },
		"eslint.codeAction.showDocumentation": { "enable": true },

		// Apply formatter.
		"eslint.format.enable": true,
		"[javascript]": {
			"editor.defaultFormatter": "dbaeumer.vscode-eslint",
			"editor.formatOnSave": false,
			"editor.formatOnPaste": false,
			"editor.codeActionsOnSave": {
				"source.fixAll.eslint": true
			}
		},
		"[typescript]": {
			"editor.defaultFormatter": "dbaeumer.vscode-eslint",
			"editor.formatOnSave": false,
			"editor.formatOnPaste": false,
			"editor.codeActionsOnSave": {
				"source.fixAll.eslint": true
			}
		},
		"typescript.validate.enable": true,
		// =====================================================================


		// =====================================================================
		// CSpell -- Verify Language Correctness.
		// Known words and other settings are in cspell.json file.
		"cSpell.spellCheckDelayMs": 500,
		// =====================================================================


		// =====================================================================
		// PlantUML -- For creating UML diagrams.
		//"plantuml.server": "http://www.plantuml.com/plantuml",
		"plantuml.server": "http://host.docker.internal:82",
		"plantuml.render": "PlantUMLServer",
		"plantuml.diagramsRoot": "puml",
		"plantuml.exportOutDir": "puml",
		"plantuml.exportSubFolder": false,
		"plantuml.exportFormat": "svg",
		// =====================================================================


		// =====================================================================
		// Other Extensions:

		// Parameter Hint:
		"phpParameterHint.php7": false,


		// Git:
		"git.ignoreLimitWarning": false,
		"git.enableSmartCommit": false,
		"git.autoRepositoryDetection": "openEditors",
		"git.ignoredRepositories": [ ".\\..\\..\\..\\..", "./../../../.." ],


		// To-do Tree:
		// ===========================
		"todo-tree.regex.regexCaseSensitive": false,
		"todo-tree.filtering.useBuiltInExcludes": "file and search excludes",
		"todo-tree.general.rootFolder": "/wordpress/wp-content/plugins/tabs-with-recommended-posts/",
		"todo-tree.filtering.excludeGlobs": ["**/backend/**", "**/frontened/**"],
		// Make todo work in docblocks and with @ in front.
		"todo-tree.regex.regex": "(//|#|<!--|/\\*|^\\s*\\*)\\s*@*($TAGS)",


		// PHPUnit & CodeCoverage:
		"better-phpunit.docker.enable": true,
		"better-phpunit.docker.command": "docker exec twrp_wp",

		// "phpunit.driverPriority": ["DockerContainer"],
		// "phpunit.docker.container": "twrp_wp",
		"phpunit.command": "docker exec -t -w /var/www/html/wp-content/plugins/tabs-with-recommended-posts twrp_wp",
		"phpunit.paths":{
			"${workspaceFolder}": "."
		},

		// "coverage-gutters.xmlname": "W:\\Projects\\wp-plugin-twrp\\wordpress\\wp-content\\plugins\\tabs-with-recommended-posts\\cov.xml",
		// "coverage-gutters.showLineCoverage": true,
		// "coverage-gutters.highlightdark": "rgba(0, 128, 128, 0.06)",
		// "coverage-gutters.noHighlightDark": "rgba(128, 0, 0, 0.1)",
		// "coverage-gutters.showGutterCoverage": false,
		// "coverage-gutters.showRulerCoverage": true,
	}
}
